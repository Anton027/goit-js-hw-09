{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,kBAChCE,EAAYJ,EAAKE,cAAc,iBAC/BG,EAASL,EAAKE,cAAc,mBA0BlC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAjCkCR,EAApCgB,iBAAiB,UAAWC,IAC/BA,EAAEC,iBACF,IAAIC,EAAiBC,OAAOC,SAASlB,EAAWmB,OAChD,MAAMC,EAAgBH,OAAOC,SAASjB,EAAUkB,OAEhD,GAAIH,EAAiB,GAAKI,EAAgB,EACxC,IAAK,IAAIC,EAAQ,EAAGA,GAASnB,EAAOiB,MAAOE,GAAS,EACpDL,GAAkBI,EAClBjB,EAAckB,EAAOL,GAClBM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,UAE/DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MACpBkB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBvB,QAAeC,eAI7DkB,EAAA5B,GAAS6B,OAAOG,QAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelay = form.querySelector('[name=\"delay\"]');\nconst delayStep = form.querySelector('[name=\"step\"]');\nconst amount = form.querySelector('[name=\"amount\"]');\n// ЗАПУСТИТИ В ЦИКЛІ ПРОМІСИ\n// ПЕРЕДАТИ DELAY НА КОЖНІЙ ІТЕРАЦІЇ for + те що у формі зібрали\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  let numbFirstDelay = Number.parseInt(firstDelay.value);\n  const numbDelayStep = Number.parseInt(delayStep.value);\n\n  if (numbFirstDelay > 0 && numbDelayStep > 0) {\n    for (let index = 1; index <= amount.value; index += 1) {\n    numbFirstDelay += numbDelayStep;\n    createPromise(index, numbFirstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }); \n  } \n  } else {\n    Notiflix.Notify.failure(`Please change value \"delay\"`);\n    return;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay)\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","numbFirstDelay","Number","parseInt","value","numbDelayStep","index","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.fe02bcf8.js.map"}